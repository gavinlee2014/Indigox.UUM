<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\professional\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\outputs\bin\Indigox.UUM.Application.dll">
   <Modules>
    <Module Name="indigox.uum.application.dll">
     <Namespaces>
      <Namespace Name="Indigox.UUM.Application.OrganizationalPerson">
       <Types>
        <Type Name="CheckUserExistsInADQuery" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#List()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2018-07-18 05:23:48Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\OrganizationalPerson" File="CheckUserExistsInADQuery.cs" Line="32">'CheckUserExistsInADQuery.List()' 调入具有 LinkDemand 的 'DirectorySearcher.Filter.set(string)'。通过此调用，'DirectorySearcher.Filter.set(string)' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'&#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\OrganizationalPerson" File="CheckUserExistsInADQuery.cs" Line="32">'CheckUserExistsInADQuery.List()' 调入具有 LinkDemand 的 'DirectorySearcher.FindAll()'。通过此调用，'DirectorySearcher.FindAll()' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'&#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\OrganizationalPerson" File="CheckUserExistsInADQuery.cs" Line="32">'CheckUserExistsInADQuery.List()' 调入具有 LinkDemand 的 'DomainController.GetDirectorySearcher()'。通过此调用，'DomainController.GetDirectorySearcher()' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'&#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\OrganizationalPerson" File="CheckUserExistsInADQuery.cs" Line="32">'CheckUserExistsInADQuery.List()' 调入具有 LinkDemand 的 'Forest.FindGlobalCatalog()'。通过此调用，'Forest.FindGlobalCatalog()' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'&#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\OrganizationalPerson" File="CheckUserExistsInADQuery.cs" Line="32">'CheckUserExistsInADQuery.List()' 调入具有 LinkDemand 的 'Forest.GetCurrentForest()'。通过此调用，'Forest.GetCurrentForest()' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'&#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\OrganizationalPerson" File="CheckUserExistsInADQuery.cs" Line="32">'CheckUserExistsInADQuery.List()' 调入具有 LinkDemand 的 'SearchResult.GetDirectoryEntry()'。通过此调用，'SearchResult.GetDirectoryEntry()' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'&#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\OrganizationalPerson" File="CheckUserExistsInADQuery.cs" Line="32">'CheckUserExistsInADQuery.List()' 调入具有 LinkDemand 的 'SearchResult.Properties.get()'。通过此调用，'SearchResult.Properties.get()' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'&#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\OrganizationalPerson" File="CheckUserExistsInADQuery.cs" Line="32">'CheckUserExistsInADQuery.List()' 调入具有 LinkDemand 的 'SearchResultCollection.GetEnumerator()'。通过此调用，'SearchResultCollection.GetEnumerator()' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'&#xD;&#xA;   -&gt;'CheckUserExistsInADQuery.List()'</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Indigox.UUM.Application.Sync">
       <Types>
        <Type Name="FullSyncCommand+FullSyncTask" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-07-18 05:23:48Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">在 'FullSyncCommand.FullSyncTask' 上实现 IDisposable，因为它创建下列 IDisposable 类型的成员: 'ImportGroupServiceClient', 'ImportOrganizationalRoleServiceClient', 'ImportOrganizationalUnitServiceClient', 'ImportRoleServiceClient', 'ImportUserServiceClient'。</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Indigox.UUM.Application.Sync.WebServices.AD">
       <Types>
        <Type Name="ADImportOrganizationalUnitService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Delete(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-07-18 05:23:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\Sync\WebServices\AD" File="ADImportOrganizationalUnitService.cs" Line="148">'ADImportOrganizationalUnitService.Delete(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Indigox.UUM.Application.Web">
       <Types>
        <Type Name="WindowsAuthenticationHandler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsReusable" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_IsReusable()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2018-07-18 05:23:48Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="D:\MyBackup\Indigox\Indigox\Indigox\Indigox.UUM\Sources\Indigox.UUM.Application\Web" File="WindowsAuthenticationHandler.cs" Line="13">'WindowsAuthenticationHandler.IsReusable.get()' 创建 'NotImplementedException' 类型的异常，该异常类型不应当在属性中引发。如果有可能会引发此异常实例，请使用其他异常类型，将该属性转换为方法，或者更改该属性的逻辑，使它不再引发异常。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
   <Name>不要使用链接请求间接公开方法</Name>
   <Description>不要使用不执行安全性检查的方法来包装受 LinkDemand 保护的方法。LinkDemand 检查直接调用方的权限而不是调用堆栈中所有调用方的权限。在这种情况下，将检查包装器方法的权限。如果包装器方法本身不检查调用堆栈中位置较高的调用方的权限，则尽管恶意代码没有足够的权限，但它仍可能能够执行被包装的函数。</Description>
   <Resolution Name="Default">{0} 调入具有 LinkDemand 的 {1}。通过此调用，{1} 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: {2}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182303.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="securityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>不要在意外的位置引发异常</Name>
   <Description>不要从意外的位置显式引发异常。用户不希望某些方法(如 Equals 和 GetHashCode)引发异常。因此，对这些方法的调用通常不包装在 try catch 块中。</Description>
   <Resolution Name="PropertyGetter">{0} 创建 {1} 类型的异常，该异常类型不应当在属性中引发。如果有可能会引发此异常实例，请使用其他异常类型，将该属性转换为方法，或者更改该属性的逻辑，使它不再引发异常。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>再次引发以保留堆栈详细信息</Name>
   <Description>重复引发捕获的异常时，请使用 IL 再次引发指令保留原始堆栈详细信息。</Description>
   <Resolution Name="Default">{0} 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>具有可释放字段的类型应该是可释放的</Name>
   <Description>声明可释放成员的类型也应实现 IDisposable。如果该类型没有任何非托管资源，请不要在其上实现终结器。</Description>
   <Resolution Name="NonBreaking">在 {0} 上实现 IDisposable，因为它创建下列 IDisposable 类型的成员: {1}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
